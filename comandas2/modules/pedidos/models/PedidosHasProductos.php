<?php

namespace app\modules\pedidos\models;

use raoul2000\workflow\base\SimpleWorkflowBehavior;
use raoul2000\workflow\helpers\WorkflowHelper;
use Yii;
use app\modules\productos\models\Productos;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "pedidos_has_productos".
 *
 * @property integer $id
 * @property integer $pedidos_id
 * @property integer $productos_id
 * @property string $observaciones
 * @property string $pedidos_has_productos_id
 * @property string $hora_pedido
 * @property integer $status
 * @property string $hora_pedido_entregado
 *
 * @property Pedidos $pedidos
 * @property Productos $productos
 */
class PedidosHasProductos extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'pedidos_has_productos';
    }

    public function behaviors()
    {
        return ArrayHelper::merge(
            parent::behaviors(),
            [
                SimpleWorkflowBehavior::className()
            ]
        );
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['pedidos_id', 'productos_id'], 'required'],
            [['pedidos_id', 'productos_id','pedidos_has_productos_id'], 'integer'],
            [['hora_pedido', 'hora_pedido_entregado'], 'safe'],
            [['observaciones'], 'string', 'max' => 100],
            [['pedidos_id'], 'exist', 'skipOnError' => true, 'targetClass' => Pedidos::className(), 'targetAttribute' => ['pedidos_id' => 'id']],
            [['productos_id'], 'exist', 'skipOnError' => true, 'targetClass' => Productos::className(), 'targetAttribute' => ['productos_id' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'pedidos_id' => Yii::t('app', 'Nro pedido'),
            'productos_id' => Yii::t('app', 'Productos ID'),
            'observaciones' => Yii::t('app', 'Observaciones'),
            'pedidos_has_productos_id' => Yii::t('app', 'Pedidos Has Productos ID'),
            'hora_pedido' => Yii::t('app', 'Hora Pedido'),
            'status' => Yii::t('app', 'Estado'),
            'hora_pedido_entregado' => Yii::t('app', 'Hora Pedido Entregado'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPedidos()
    {
        return $this->hasOne(Pedidos::className(), ['id' => 'pedidos_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getProductos()
    {
        return $this->hasOne(Productos::className(), ['id' => 'productos_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getOpciones() {
        if($this->pedidos_has_productos_id) {
            return [];
        } else {
            return self::find()->where(['pedidos_has_productos_id' => $this->id])->all();
        }
    }

    public function beforeSave($insert)
    {
        if($insert) {
            try {
                $this->sendToStatus('iniciado');
            } catch (Exception $e) {
                $this->addError('status', 'El estado solicitado es incorrecto');
                return false;
            }
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function afterFind()
    {
        if($this->hora_pedido)
            $this->hora_pedido = \DateTime::createFromFormat('Y-m-d H:i:s', $this->hora_pedido)->format('d-m-Y H:i:s');
        if($this->hora_pedido_entregado)
            $this->hora_pedido_entregado = \DateTime::createFromFormat('Y-m-d H:i:s', $this->hora_pedido_entregado)->format('d-m-Y H:i:s');
        parent::afterFind(); // TODO: Change the autogenerated stub
    }
}
